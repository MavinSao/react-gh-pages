{"version":3,"sources":["actions/actionType.js","actions/articleAction.js","localization/string.js","components/ArticleList.js","components/Menu.js","components/ViewItem.js","components/AddArticle.js","components/Category.js","actions/categoryAction.js","components/About.js","App.js","serviceWorker.js","reducer/articleReducer.js","reducer/categoryReducer.js","reducer/rootReducer.js","stores/centralStore.js","index.js"],"names":["actionType","searchArticle","title","dp","axios","get","baseURL","then","res","type","payLoad","data","DATA","strings","LocalizedStrings","en","home","category","about","khmer","english","titleApp","description","thumbnail","action","view","update","delete","addNew","submit","search","addNewArtilce","updateArticle","kh","ArticleList","props","state","isLoading","console","log","this","fetchArticle","Jumbotron","className","to","Button","variant","Container","Table","striped","bordered","hover","style","width","articles","map","article","key","ID","TITLE","DESCRIPTION","src","IMAGE","height","size","onClick","deleteArticle","Component","connect","store","articleR","id","Menu","changeLanguage","lang","setLanguage","language","setState","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","Link","as","NavDropdown","Item","Form","inline","FormControl","placeholder","onChange","e","target","value","ViewItem","date","CREATED_DATE","substring","join","fetchOneArticle","match","params","formatDate","initState","imageFile","imageURL","titleError","descriptionError","AddArticle","validate","handleFile","files","undefined","Axios","put","history","goBack","post","file","FormData","append","Article","addUpdate","catch","err","name","Group","controlId","Label","Control","handler","bind","color","File","label","custom","addUpdateArticle","Category","fetchCategory","categories","NAME","categoryR","About","App","exact","path","component","Boolean","window","location","hostname","rootReducer","combineReducers","filter","middleware","thunk","centralStore","createStore","compose","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0c2ac21a.chunk.js","sourcesContent":["export const actionType =  {\n    fetch_article : \"fetch_article\",\n    delete_article : \"delete_article\",\n    search_article : \"search_article\",\n    fetch_category : \"fetch_category\"\n}\n","import axios from \"axios\"\nimport { baseURL } from \"../App\"\nimport { actionType } from \"./actionType\"\n\nexport const fetchArticle = ()=>{\n    return (dp) => {\n        axios.get(`${baseURL}v1/api/articles?page=1&limit=15`).then(res => {        \n            dp({\n                type: actionType.fetch_article,\n                payLoad: res.data.DATA,\n            })\n        })\n    }\n}\n\nexport const searchArticle = (title)=> {\n    \n    return (dp)=>{\n        axios.get(`${baseURL}v1/api/articles?title=${title}`).then(res => {\n            dp({\n                type: actionType.search_article,\n                payLoad: res.data.DATA,\n            })\n        \n        })\n    }\n}\n\nexport const deleteArticle = (id) => {\n    return (dp) => {\n        axios.delete(`${baseURL}v1/api/articles/${id}`).then(res => {\n            dp({\n                type: actionType.delete_article,\n                payLoad: id\n            })\n        })\n    }\n}\n\n","import LocalizedStrings from 'localized-strings';\nexport const strings = new LocalizedStrings({\n    en:{\n      home:\"Home\",\n      category:\"Category\",\n      about:\"About\",\n      khmer:\"Khmer\",\n      english:\"English\",\n      titleApp:\"Article Management System\",\n      title:\"TITLE\",\n      description:\"Description\",\n      thumbnail:\"THUMBNAIL\",\n      action:\"ACTION\",\n      view:\"View\",\n      update:\"Update\",\n      delete:\"Delete\",\n      addNew:\"Add New\",\n      submit:\"Submit\",\n      search:\"Search\",\n      addNewArtilce:\"Add New Article\",\n      updateArticle:\"Update Article\"\n    },\n    kh: {\n      home:\"ទំព័រដើម\",\n      category:\"ប្រភេទ\",\n      about:\"អំពីរ\",\n      khmer:\"ខ្មែរ\",\n      english:\"អង់គ្លេស\",\n      titleApp:\"ប្រពន្ធ័គ្រប់គ្រងពត័មាន\",\n      title:\"ចំណងជើង\",\n      description:\"ពិពណ៍នា\",\n      thumbnail:\"រូបភាព\",\n      action:\"សកម្មភាព\",\n      view:\"បង្ហាញ\",\n      update:\"កែប្រែ\",\n      delete:\"លុប\",\n      addNew:\"បន្ថែម​អត្ថបទ\",\n      submit:\"បញ្ចូល\",\n      search:\"ស្វែងរក\",\n      addNewArtilce:\"បន្ថែមអត្ថបទថ្មី\",\n      updateArticle:\"កែប្រែអត្ថបទថ្មី\"\n    }},\n      {/* options */}\n  );","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchArticle, searchArticle, deleteArticle } from './../actions/articleAction'\nimport {Container, Table, Button, Jumbotron} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport { BoxLoading } from 'react-loadingg';\nimport { strings } from \"../localization/string\";\n\nclass ArticleList extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            isLoading : false\n        }\n    }\n    componentWillMount(){ \n        console.log(\"Article Loading\");    \n        this.props.fetchArticle()\n    } \n    componentDidMount(){\n\n\n\n    }\n\n    render() {\n        \n        return (\n            <div>\n            <div>{this.state.isLoading? <BoxLoading /> : null}</div>\n            <Jumbotron className=\"App\">\n                    <h1>{strings.titleApp}</h1>\n                    <p>\n                    MOST POPULAR LEADERSHIP AND MANAGEMENT ARTICLES \n                    </p>\n                    <p>\n                        <Link to=\"/addUpdate\">\n                        <Button variant=\"primary\">{strings.addNew}</Button>\n                        </Link>\n                    </p>\n            </Jumbotron>\n            <Container>  \n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                        <th>#</th>\n                        <th style={{width:\"20%\"}}>{strings.title}</th>\n                        <th style={{width:\"40%\"}}>{strings.description}</th>\n                        <th>{strings.thumbnail}</th>\n                        <th>{strings.action}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.articles.map(article =>     \n                            <tr key={article.ID}>\n                                <td>{article.ID}</td>\n                                <td>{article.TITLE}</td>\n                                <td>{article.DESCRIPTION}</td>\n                                <td> \n                                    <img src={article.IMAGE === null? 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/1200px-Circle-icons-profile.svg.png' : article.IMAGE} width=\"80px\" height=\"80px\"/>\n                                 </td>\n                                <td>\n                                    <Link to={`/detail/${article.ID}`}>\n                                        <Button variant=\"secondary\" size=\"sm\">{strings.view}</Button>\n                                    </Link>\n                                    <Link to={`/addUpdate/${article.ID}`}>\n                                    <Button variant=\"info\" size=\"sm\" className=\"mx-2\">{strings.update}</Button>\n                                    </Link>\n                                    <Button variant=\"danger\" size=\"sm\" \n                                        onClick = {()=>{\n                                            this.props.deleteArticle(article.ID)\n                                        }}\n                                    >{strings.delete}</Button>\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                    </Table>\n            </Container>\n            </div>\n        )\n    }\n}\n\n//Sub to Store\nconst mtp = (store) => {       \n    return {\n        articles: store.articleR.articles\n    }\n}\n//Connect \nexport default connect (mtp, { fetchArticle, searchArticle, deleteArticle })(ArticleList)\n","import React, { Component } from 'react'\nimport {Navbar,Nav,Button,Form,FormControl, Container,Jumbotron,NavDropdown} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport {searchArticle} from './../actions/articleAction'\nimport {Link} from 'react-router-dom'\nimport { strings } from \"../localization/string\"\nimport FacebookLogin from 'react-facebook-login';\nimport GoogleLogin from 'react-google-login';\n\nclass Menu extends Component {\n\n    changeLanguage = (lang)=>{\n        strings.setLanguage(lang);\n        this.props.language(lang);\n        this.setState({});\n    }\n\n    componenpmntWillMount(){\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                    <Container>\n                        <Link to=\"/\">\n                        <Navbar.Brand>AMS</Navbar.Brand>\n                        </Link>\n                        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                        <Navbar.Collapse id=\"responsive-navbar-nav\">\n                            <Nav className=\"mr-auto\">\n                            <Nav.Link as={Link} to=\"/\" >{strings.home}</Nav.Link>\n                            <Nav.Link as={Link} to=\"/Category\" >{strings.category}</Nav.Link>\n                            <Nav.Link as={Link} to=\"/About\" >{strings.about}</Nav.Link>\n                            <NavDropdown title=\"Language\" id=\"collasible-nav-dropdown\">\n                                <NavDropdown.Item onClick={()=>{this.changeLanguage('kh')}}>{strings.khmer}</NavDropdown.Item>\n                                <NavDropdown.Item onClick={()=>{this.changeLanguage('en')}}>{strings.english}</NavDropdown.Item>\n                            </NavDropdown>\n                            <Nav.Link >Logout</Nav.Link>\n                            </Nav>\n                            {/* <Nav>\n                            <Nav.Link href=\"#deets\">More deets</Nav.Link>\n                            <Nav.Link eventKey={2} href=\"#memes\">\n                                logout\n                            </Nav.Link>\n                            </Nav> */}\n                        </Navbar.Collapse>\n                        <Form inline>\n                            <FormControl type=\"text\" placeholder={strings.search}className=\"mr-sm-2\" \n                                onChange={(e)=>{\n                                    this.props.searchArticle(e.target.value)\n                                }}\n                            />\n                            <Button variant=\"outline-info\">{strings.search}</Button>\n                        </Form>\n                     </Container>  \n                </Navbar>                 \n            </div>\n        )\n    }\n}\n\n\n\nconst mtp = (store)=>{\n    return {\n        articles: store.articleR.articles\n    }\n}\n\nexport default connect(mtp, {searchArticle})(Menu)\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { baseURL } from '../App'\nimport {Container} from 'react-bootstrap'\nexport default class ViewItem extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            article : {}\n        }\n    }\n    fetchOneArticle(id){\n        axios.get(`${baseURL}v1/api/articles/${id}`).then(res => {\n            this.setState({\n                article : res.data.DATA\n            })\n        })     \n    }\n\n    formatDate(){\n        const date = this.state.article.CREATED_DATE + '';\n        const yy = date.substring(0,4)\n        const mm = date.substring(4,6)\n        const dd = date.substring(6,8)\n        const Dates = [yy,mm,dd]\n        return Dates.join('-')\n    }\n\n    componentWillMount(){\n        \n        this.fetchOneArticle(this.props.match.params.id);\n        \n    }\n    render() {\n        return (\n            <Container>\n                <h1>{this.state.article.TITLE}</h1>\n                <h4>Date : {this.formatDate()}</h4>\n                <img src={this.state.article.IMAGE} width=\"100%\"/>\n                <h3>Description : </h3>\n                <p>{this.state.article.DESCRIPTION}</p>\n            </Container>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Form,Container,Button,Image} from 'react-bootstrap'\nimport Axios from 'axios';\nimport { baseURL } from '../App';\nimport { BoxLoading } from 'react-loadingg';\nimport { strings } from \"../localization/string\";\n\nconst initState = {\n            id: '',\n            title : '',\n            description : '',\n            imageFile : null,\n            imageURL : 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/1200px-Circle-icons-profile.svg.png',\n            titleError: '',\n            descriptionError: '',\n            isLoading : false\n}\nexport default class AddArticle extends Component {\n    constructor(props){\n        super(props);\n        this.state = initState\n    }\n\n    validate = () => {\n       let titleError= '';\n       let descriptionError= '';\n       if (!this.state.title){\n           titleError = \"Title can not be blank\";\n       }\n       if (!this.state.description){\n        descriptionError = \"Description can not be blank\";\n       }\n       if (titleError || descriptionError){\n           this.setState({\n               titleError,\n               descriptionError\n           })\n           return false;\n       }\n       return true;\n    }\n\n    addUpdate(article){\n        if (this.state.id !== undefined){\n            Axios.put(`${baseURL}v1/api/articles/${this.state.id}`,article).then(res=>{\n                this.setState({\n                    isLoading : false\n                })\n                this.props.history.goBack()\n                \n            })\n        }else{\n            Axios.post(`${baseURL}v1/api/articles`,article).then(res=>{\n                this.setState({\n                    isLoading : false\n                })\n                this.props.history.goBack()\n            })\n        }\n    }\n\n    addUpdateArticle(){\n        \n        const isValid = this.validate()\n        if (isValid){\n        let file = new FormData()\n        file.append('FILE',this.state.imageFile)\n        this.setState({\n            isLoading : true\n        })\n\n        Axios.post(`${baseURL}v1/api/uploadfile/single`,file).then(res=>{\n            var Article = {\n                TITLE : this.state.title,\n                DESCRIPTION : this.state.description,\n                IMAGE: res.data.DATA\n            } \n            this.addUpdate(Article)\n        }).catch(err=>{\n            console.log(err);   \n            var Article = {\n                TITLE : this.state.title,\n                DESCRIPTION : this.state.description,\n                IMAGE : this.state.imageURL\n            } \n            this.addUpdate(Article)        \n        })\n\n        }    \n    }\n\n    fetchOneArticle(id){\n        Axios.get(`${baseURL}v1/api/articles/${id}`).then(res => {\n            this.setState({\n                title : res.data.DATA.TITLE,\n                description : res.data.DATA.DESCRIPTION,\n                imageURL : res.data.DATA.IMAGE\n            })\n        })     \n    }\n\n    handler(e){\n        var name = e.target.name;\n        var value = e.target.value;\n        this.setState({\n            [name] : value\n        })\n         \n    }\n\n    handleFile = (e)=>{\n        this.setState({\n            imageFile : e.target.files[0]\n        })\n    }\n    componentWillMount(){\n        this.setState({\n            id : this.props.match.params.id\n        })\n        if (this.props.match.params.id !== undefined){\n            this.fetchOneArticle(this.props.match.params.id)\n        }\n    }\n    \n    render() {\n        return (\n            <Container>\n                <h1 className=\"App my-4\">{ this.state.id === undefined? strings.addNewArtilce : strings.updateArticle}</h1>\n                <div>{this.state.isLoading? <BoxLoading /> : null}</div>\n                <Form>\n                <Form.Group controlId=\"title\">\n                    <Form.Label>{strings.title}</Form.Label>\n                    <Form.Control type=\"text\" name=\"title\" placeholder=\"Enter Title\" value={this.state.title}\n                    onChange = {this.handler.bind(this)}\n                    />\n                    <div style={{color:\"red\"}}>{this.state.titleError}</div>\n                </Form.Group>\n                <Form.Group controlId=\"description\">\n                    <Form.Label>{strings.description}</Form.Label>\n                    <Form.Control type=\"text\" name=\"description\" placeholder=\"Enter Description\" value={this.state.description}\n                    onChange = {this.handler.bind(this)}\n                    />\n                    <div style={{color:\"red\"}}>{this.state.descriptionError}</div>\n                </Form.Group>\n                <Form>\n                    <Form.Label>{strings.thumbnail}</Form.Label>\n                    <Form.File \n                        id=\"custom-file\"\n                        label=\"Custom file input\"\n                        onChange = {this.handleFile.bind(this)}\n                        custom\n                    />\n                </Form> <br/>\n                <Button variant=\"secondary\" size=\"lg\" \n                   onClick = {()=>{\n                       this.addUpdateArticle()\n                   }}\n                >{strings.submit}</Button>\n                </Form>\n            </Container>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {fetchCategory} from './../actions/categoryAction'\nimport {Container,Table,Jumbotron} from 'react-bootstrap'\nimport { strings } from '../localization/string'\nclass Category extends Component {\n    componentWillMount(){\n      this.props.fetchCategory()\n    }\n    render() {\n        return (\n            <div>\n                <Jumbotron className=\"App\">\n                    <h1>{strings.category}</h1>\n                </Jumbotron>\n                <Container>  \n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                        <th>#</th>\n                        <th>{strings.title}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.categories.map(category => \n                            <tr>\n                                <td>{category.ID}</td>\n                                <td>{category.NAME}</td>\n                            </tr>\n                        ) \n                        }\n                    </tbody>    \n                </Table>\n                </Container>               \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store)=>{\n    return{\n        categories : store.categoryR.categories\n    }\n}\n\nexport default connect(mapStateToProps, {fetchCategory})(Category)\n\n","import Axios from \"axios\"\nimport { baseURL } from \"../App\"\nimport { actionType } from \"./actionType\"\n\n\nexport const fetchCategory = () => {\n    return (dp)=>{\n        Axios.get(`${baseURL}v1/api/categories`).then(res=>{\n            dp({\n                type: actionType.fetch_category,\n                payLoad: res.data.DATA\n            }) \n        })\n    }\n}\n","import React, { Component } from 'react'\nimport {Container} from 'react-bootstrap'\nimport { strings } from '../localization/string'\nexport default class About extends Component {\n    render() {\n        return (\n            <Container className=\"App\">\n                <h1>{strings.about}</h1>\n                <img src=\"https://ugc.futurelearn.com/uploads/images/d8/af/d8af6c2e-2762-407e-8914-e24e6d63e258.jpg\" width=\"100%s\"/>\n                <p>Management is the brain of an enterprise. A manager keeps himself in touch with the current environment and supplies foresight to the enterprise. He helps in predicting what is going to happen in future which will influence the working of an enterprise.</p>\n            </Container>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport ArticleList from './components/ArticleList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Menu from './components/Menu';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport ViewItem from './components/ViewItem';\nimport AddArticle from './components/AddArticle';\nimport Category from './components/Category';\nimport About from './components/About';\nimport {strings} from './localization/string'\n\nexport const baseURL = \"http://110.74.194.124:15011/\";\n\nexport default class App extends Component {\n\n  constructor(props){\n    super(props)\n    this.changeLanguage.bind(this)\n  }\n\n  changeLanguage = (lang)=>{\n    strings.setLanguage(lang);\n    this.setState({});\n  }\n\n  render() {\n    return (\n        <BrowserRouter>\n        <div>\n            <Menu language={this.changeLanguage}/>\n            <Route exact path=\"/\" component={ArticleList}/>  \n            <Route path=\"/detail/:id\" component={ViewItem}/>  \n            <Route exact path=\"/addUpdate\" component={AddArticle}/>  \n            <Route path=\"/addUpdate/:id\" component={AddArticle}/> \n            <Route path=\"/Category\" component={Category}/> \n            <Route path=\"/About\" component={About}/> \n        </div>  \n      </BrowserRouter>\n    )\n  }\n}\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { actionType } from \"../actions/actionType\"\n\nconst initState = {\n    articles : []\n}\n\nexport const articleReducer = (state = initState, action) => {  \n    \n    \n    switch(action.type){\n\n        case actionType.fetch_article: \n            return {...state, articles :action.payLoad}\n        case actionType.search_article : \n            return {...state, articles : action.payLoad}\n        case actionType.delete_article : \n            return {...state, articles : state.articles.filter(article => article.ID !== action.payLoad)}\n        default : return state\n    }\n    \n}","import { actionType } from \"../actions/actionType\"\n\nconst initState = {\n    categories : []\n}\n\nexport const categoryReducer = (state = initState, action) => {\n    switch(action.type){\n        case actionType.fetch_category : \n             return {...state,categories: action.payLoad}\n        default : return state     \n    }\n}","\nimport { articleReducer } from './articleReducer'\nimport { categoryReducer} from './categoryReducer'\nimport { combineReducers } from 'redux'\n\nexport const rootReducer = combineReducers({\n    articleR: articleReducer,\n    categoryR: categoryReducer\n})","import thunk from \"redux-thunk\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"../reducer/rootReducer\";\n\nconst middleware = [thunk]\nexport const centralStore = createStore(rootReducer ,compose(applyMiddleware(...middleware)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { centralStore } from './stores/centralStore';\n\nReactDOM.render(\n  <Provider store={centralStore}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}