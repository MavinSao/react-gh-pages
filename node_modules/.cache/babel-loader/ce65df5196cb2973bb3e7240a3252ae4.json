{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/React JS/reactjs-ams-redux/src/components/AddArticle.js\";\nimport React, { Component } from 'react';\nimport { Form, Container, Button, Image } from 'react-bootstrap';\nimport Axios from 'axios';\nimport { baseURL } from '../App';\nconst initState = {\n  id: '',\n  title: '',\n  description: '',\n  imageFile: null,\n  imageURL: 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/1200px-Circle-icons-profile.svg.png',\n  titleError: '',\n  descriptionError: ''\n};\nexport default class AddArticle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let titleError = '';\n      let descriptionError = '';\n\n      if (!this.state.title) {\n        titleError = \"Title can not be blank\";\n      }\n\n      if (!this.state.description) {\n        descriptionError = \"Description can not be blank\";\n      }\n\n      if (titleError || descriptionError) {\n        this.setState({\n          titleError,\n          descriptionError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleFile = e => {\n      this.setState({\n        imageFile: e.target.files[0]\n      });\n    };\n\n    this.state = initState;\n  }\n\n  addUpdateArticle() {\n    const isValid = this.validate();\n\n    if (isValid) {\n      let file = new FormData();\n      file.append('FILE', this.state.imageFile);\n      Axios.post(`${baseURL}v1/api/uploadfile/single`, file).then(res => {\n        this.setState({\n          imageURL: res.data.DATA\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n      var Article = {\n        TITLE: this.state.title,\n        DESCRIPTION: this.state.description,\n        IMAGE: this.state.imageURL\n      };\n\n      if (this.state.id !== undefined) {\n        Axios.put(`${baseURL}v1/api/articles/${this.state.id}`, Article).then(res => {\n          this.props.history.goBack();\n        });\n      } else {\n        Axios.post(`${baseURL}v1/api/articles`, Article).then(res => {\n          this.props.history.goBack();\n        });\n      }\n    }\n  }\n\n  fetchOneArticle(id) {\n    Axios.get(`${baseURL}v1/api/articles/${id}`).then(res => {\n      this.setState({\n        title: res.data.DATA.TITLE,\n        description: res.data.DATA.DESCRIPTION\n      });\n    });\n  }\n\n  handler(e) {\n    var name = e.target.name;\n    var value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  componentWillMount() {\n    this.setState({\n      id: this.props.match.params.id\n    });\n\n    if (this.props.match.params.id !== undefined) {\n      this.fetchOneArticle(this.props.match.params.id);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, this.state.id === undefined ? \"Add Article\" : \"Update Article\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"TITLE\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Enter Title\",\n      value: this.state.title,\n      onChange: this.handler.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, this.state.titleError)), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, \"DESCRIPTION\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"description\",\n      placeholder: \"Enter Description\",\n      value: this.state.description,\n      onChange: this.handler.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, this.state.descriptionError)), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, \"Image\"), /*#__PURE__*/React.createElement(Form.File, {\n      id: \"custom-file\",\n      label: \"Custom file input\",\n      onChange: this.handleFile.bind(this),\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    })), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      size: \"lg\",\n      onClick: () => {\n        this.addUpdateArticle();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, \"Submit\"), ' '));\n  }\n\n}","map":{"version":3,"sources":["/Users/admin/Desktop/React JS/reactjs-ams-redux/src/components/AddArticle.js"],"names":["React","Component","Form","Container","Button","Image","Axios","baseURL","initState","id","title","description","imageFile","imageURL","titleError","descriptionError","AddArticle","constructor","props","validate","state","setState","handleFile","e","target","files","addUpdateArticle","isValid","file","FormData","append","post","then","res","data","DATA","catch","err","console","log","Article","TITLE","DESCRIPTION","IMAGE","undefined","put","history","goBack","fetchOneArticle","get","handler","name","value","componentWillMount","match","params","render","bind","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Form,Container,Button,Image} from 'react-bootstrap'\nimport Axios from 'axios';\nimport { baseURL } from '../App';\n\nconst initState = {\n            id: '',\n            title : '',\n            description : '',\n            imageFile : null,\n            imageURL : 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/1200px-Circle-icons-profile.svg.png',\n            titleError: '',\n            descriptionError: ''\n}\nexport default class AddArticle extends Component {\n    constructor(props){\n        super(props);\n        this.state = initState\n    }\n\n    validate = () => {\n       let titleError= '';\n       let descriptionError= '';\n       if (!this.state.title){\n           titleError = \"Title can not be blank\";\n       }\n       if (!this.state.description){\n        descriptionError = \"Description can not be blank\";\n       }\n       if (titleError || descriptionError){\n           this.setState({\n               titleError,\n               descriptionError\n           })\n           return false;\n       }\n       return true;\n    }\n\n    addUpdateArticle(){\n        const isValid = this.validate()\n        if (isValid){\n        \n        let file = new FormData()\n        file.append('FILE',this.state.imageFile)\n          \n        Axios.post(`${baseURL}v1/api/uploadfile/single`,file).then(res=>{\n            this.setState({\n                imageURL : res.data.DATA\n            })\n        }).catch(err=>{\n            console.log(err);    \n        })\n\n        var Article = {\n            TITLE : this.state.title,\n            DESCRIPTION : this.state.description,\n            IMAGE: this.state.imageURL\n        }\n        \n        if (this.state.id !== undefined){\n            Axios.put(`${baseURL}v1/api/articles/${this.state.id}`,Article).then(res=>{\n                this.props.history.goBack()\n            })\n        }else{\n            Axios.post(`${baseURL}v1/api/articles`,Article).then(res=>{\n                this.props.history.goBack()\n            })\n        }\n\n        }    \n    }\n\n    fetchOneArticle(id){\n        Axios.get(`${baseURL}v1/api/articles/${id}`).then(res => {\n            this.setState({\n                title : res.data.DATA.TITLE,\n                description : res.data.DATA.DESCRIPTION\n            })\n        })     \n    }\n\n    handler(e){\n        var name = e.target.name;\n        var value = e.target.value;\n        this.setState({\n            [name] : value\n        })\n         \n    }\n\n    handleFile = (e)=>{\n        this.setState({\n            imageFile : e.target.files[0]\n        })\n    }\n    componentWillMount(){\n        this.setState({\n            id : this.props.match.params.id\n        })\n        if (this.props.match.params.id !== undefined){\n            this.fetchOneArticle(this.props.match.params.id)\n        }\n    }\n    \n    render() {\n        return (\n            <Container>\n                <h1 className=\"App my-4\">{ this.state.id === undefined? \"Add Article\" : \"Update Article\"}</h1>\n                <Form>\n                <Form.Group controlId=\"title\">\n                    <Form.Label>TITLE</Form.Label>\n                    <Form.Control type=\"text\" name=\"title\" placeholder=\"Enter Title\" value={this.state.title}\n                    onChange = {this.handler.bind(this)}\n                    />\n                    <div style={{color:\"red\"}}>{this.state.titleError}</div>\n                </Form.Group>\n                <Form.Group controlId=\"description\">\n                    <Form.Label>DESCRIPTION</Form.Label>\n                    <Form.Control type=\"text\" name=\"description\" placeholder=\"Enter Description\" value={this.state.description}\n                    onChange = {this.handler.bind(this)}\n                    />\n                    <div style={{color:\"red\"}}>{this.state.descriptionError}</div>\n                </Form.Group>\n                <Form>\n                    <Form.Label>Image</Form.Label>\n                    <Form.File \n                        id=\"custom-file\"\n                        label=\"Custom file input\"\n                        onChange = {this.handleFile.bind(this)}\n                        custom\n                    />\n                </Form> <br/>\n                <Button variant=\"secondary\" size=\"lg\" \n                   onClick = {()=>{\n                       this.addUpdateArticle()\n                   }}\n                >Submit</Button>{' '}\n                </Form>\n            </Container>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}