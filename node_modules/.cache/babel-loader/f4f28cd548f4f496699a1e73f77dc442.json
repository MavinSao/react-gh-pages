{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/React JS/reactjs-ams-redux -deploy-git/src/components/AddArticle.js\";\nimport React, { Component } from 'react';\nimport { Form, Container, Button, Image } from 'react-bootstrap';\nimport Axios from 'axios';\nimport { baseURL } from '../App';\nimport { BoxLoading } from 'react-loadingg';\nimport { strings } from \"../localization/string\";\nconst initState = {\n  id: '',\n  title: '',\n  description: '',\n  imageFile: null,\n  imageURL: 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/1200px-Circle-icons-profile.svg.png',\n  titleError: '',\n  descriptionError: '',\n  isLoading: false\n};\nexport default class AddArticle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let titleError = '';\n      let descriptionError = '';\n\n      if (!this.state.title) {\n        titleError = \"Title can not be blank\";\n      }\n\n      if (!this.state.description) {\n        descriptionError = \"Description can not be blank\";\n      }\n\n      if (titleError || descriptionError) {\n        this.setState({\n          titleError,\n          descriptionError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleFile = e => {\n      this.setState({\n        imageFile: e.target.files[0]\n      });\n    };\n\n    this.state = initState;\n  }\n\n  addUpdate(article) {\n    if (this.state.id !== undefined) {\n      Axios.put(`${baseURL}v1/api/articles/${this.state.id}`, article).then(res => {\n        this.setState({\n          isLoading: false\n        });\n        this.props.history.goBack();\n      });\n    } else {\n      Axios.post(`${baseURL}v1/api/articles`, article).then(res => {\n        this.setState({\n          isLoading: false\n        });\n        this.props.history.goBack();\n      });\n    }\n  }\n\n  addUpdateArticle() {\n    const isValid = this.validate();\n\n    if (isValid) {\n      let file = new FormData();\n      file.append('FILE', this.state.imageFile);\n      this.setState({\n        isLoading: true\n      });\n      Axios.post(`${baseURL}v1/api/uploadfile/single`, file).then(res => {\n        var Article = {\n          TITLE: this.state.title,\n          DESCRIPTION: this.state.description,\n          IMAGE: res.data.DATA\n        };\n        this.addUpdate(Article);\n      }).catch(err => {\n        console.log(err);\n        var Article = {\n          TITLE: this.state.title,\n          DESCRIPTION: this.state.description,\n          IMAGE: this.state.imageURL\n        };\n        this.addUpdate(Article);\n      });\n    }\n  }\n\n  fetchOneArticle(id) {\n    Axios.get(`${baseURL}v1/api/articles/${id}`).then(res => {\n      this.setState({\n        title: res.data.DATA.TITLE,\n        description: res.data.DATA.DESCRIPTION,\n        imageURL: res.data.DATA.IMAGE\n      });\n    });\n  }\n\n  handler(e) {\n    var name = e.target.name;\n    var value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  componentWillMount() {\n    this.setState({\n      id: this.props.match.params.id\n    });\n\n    if (this.props.match.params.id !== undefined) {\n      this.fetchOneArticle(this.props.match.params.id);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, this.state.id === undefined ? strings.addNewArtilce : strings.updateArticle), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(BoxLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 45\n      }\n    }) : null), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, strings.title), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Enter Title\",\n      value: this.state.title,\n      onChange: this.handler.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, this.state.titleError)), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, strings.description), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"description\",\n      placeholder: \"Enter Description\",\n      value: this.state.description,\n      onChange: this.handler.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, this.state.descriptionError)), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, strings.thumbnail), /*#__PURE__*/React.createElement(Form.File, {\n      id: \"custom-file\",\n      label: \"Custom file input\",\n      onChange: this.handleFile.bind(this),\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    })), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      size: \"lg\",\n      onClick: () => {\n        this.addUpdateArticle();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, strings.submit)));\n  }\n\n}","map":{"version":3,"sources":["/Users/admin/Desktop/React JS/reactjs-ams-redux -deploy-git/src/components/AddArticle.js"],"names":["React","Component","Form","Container","Button","Image","Axios","baseURL","BoxLoading","strings","initState","id","title","description","imageFile","imageURL","titleError","descriptionError","isLoading","AddArticle","constructor","props","validate","state","setState","handleFile","e","target","files","addUpdate","article","undefined","put","then","res","history","goBack","post","addUpdateArticle","isValid","file","FormData","append","Article","TITLE","DESCRIPTION","IMAGE","data","DATA","catch","err","console","log","fetchOneArticle","get","handler","name","value","componentWillMount","match","params","render","addNewArtilce","updateArticle","bind","color","thumbnail","submit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Form,Container,Button,Image} from 'react-bootstrap'\nimport Axios from 'axios';\nimport { baseURL } from '../App';\nimport { BoxLoading } from 'react-loadingg';\nimport { strings } from \"../localization/string\";\n\nconst initState = {\n            id: '',\n            title : '',\n            description : '',\n            imageFile : null,\n            imageURL : 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/1200px-Circle-icons-profile.svg.png',\n            titleError: '',\n            descriptionError: '',\n            isLoading : false\n}\nexport default class AddArticle extends Component {\n    constructor(props){\n        super(props);\n        this.state = initState\n    }\n\n    validate = () => {\n       let titleError= '';\n       let descriptionError= '';\n       if (!this.state.title){\n           titleError = \"Title can not be blank\";\n       }\n       if (!this.state.description){\n        descriptionError = \"Description can not be blank\";\n       }\n       if (titleError || descriptionError){\n           this.setState({\n               titleError,\n               descriptionError\n           })\n           return false;\n       }\n       return true;\n    }\n\n    addUpdate(article){\n        if (this.state.id !== undefined){\n            Axios.put(`${baseURL}v1/api/articles/${this.state.id}`,article).then(res=>{\n                this.setState({\n                    isLoading : false\n                })\n                this.props.history.goBack()\n                \n            })\n        }else{\n            Axios.post(`${baseURL}v1/api/articles`,article).then(res=>{\n                this.setState({\n                    isLoading : false\n                })\n                this.props.history.goBack()\n            })\n        }\n    }\n\n    addUpdateArticle(){\n        \n        const isValid = this.validate()\n        if (isValid){\n        let file = new FormData()\n        file.append('FILE',this.state.imageFile)\n        this.setState({\n            isLoading : true\n        })\n\n        Axios.post(`${baseURL}v1/api/uploadfile/single`,file).then(res=>{\n            var Article = {\n                TITLE : this.state.title,\n                DESCRIPTION : this.state.description,\n                IMAGE: res.data.DATA\n            } \n            this.addUpdate(Article)\n        }).catch(err=>{\n            console.log(err);   \n            var Article = {\n                TITLE : this.state.title,\n                DESCRIPTION : this.state.description,\n                IMAGE : this.state.imageURL\n            } \n            this.addUpdate(Article)        \n        })\n\n        }    \n    }\n\n    fetchOneArticle(id){\n        Axios.get(`${baseURL}v1/api/articles/${id}`).then(res => {\n            this.setState({\n                title : res.data.DATA.TITLE,\n                description : res.data.DATA.DESCRIPTION,\n                imageURL : res.data.DATA.IMAGE\n            })\n        })     \n    }\n\n    handler(e){\n        var name = e.target.name;\n        var value = e.target.value;\n        this.setState({\n            [name] : value\n        })\n         \n    }\n\n    handleFile = (e)=>{\n        this.setState({\n            imageFile : e.target.files[0]\n        })\n    }\n    componentWillMount(){\n        this.setState({\n            id : this.props.match.params.id\n        })\n        if (this.props.match.params.id !== undefined){\n            this.fetchOneArticle(this.props.match.params.id)\n        }\n    }\n    \n    render() {\n        return (\n            <Container>\n                <h1 className=\"App my-4\">{ this.state.id === undefined? strings.addNewArtilce : strings.updateArticle}</h1>\n                <div>{this.state.isLoading? <BoxLoading /> : null}</div>\n                <Form>\n                <Form.Group controlId=\"title\">\n                    <Form.Label>{strings.title}</Form.Label>\n                    <Form.Control type=\"text\" name=\"title\" placeholder=\"Enter Title\" value={this.state.title}\n                    onChange = {this.handler.bind(this)}\n                    />\n                    <div style={{color:\"red\"}}>{this.state.titleError}</div>\n                </Form.Group>\n                <Form.Group controlId=\"description\">\n                    <Form.Label>{strings.description}</Form.Label>\n                    <Form.Control type=\"text\" name=\"description\" placeholder=\"Enter Description\" value={this.state.description}\n                    onChange = {this.handler.bind(this)}\n                    />\n                    <div style={{color:\"red\"}}>{this.state.descriptionError}</div>\n                </Form.Group>\n                <Form>\n                    <Form.Label>{strings.thumbnail}</Form.Label>\n                    <Form.File \n                        id=\"custom-file\"\n                        label=\"Custom file input\"\n                        onChange = {this.handleFile.bind(this)}\n                        custom\n                    />\n                </Form> <br/>\n                <Button variant=\"secondary\" size=\"lg\" \n                   onClick = {()=>{\n                       this.addUpdateArticle()\n                   }}\n                >{strings.submit}</Button>\n                </Form>\n            </Container>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}